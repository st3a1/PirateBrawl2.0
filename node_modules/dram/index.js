// Generated by LiveScript 1.2.0
(function(){
  var σ, ρ, oreo, wrapStream, toMethod, methods, enhance, simple, withStatus, ok, notFound, error, withHeader, type, json, html, text, withCookie, withSessionCookie, redirect, movedPermanently, found, seeOther, temporaryRedirect, permanentRedirect, slice$ = [].slice, out$ = typeof exports != 'undefined' && exports || this;
  σ = require('highland');
  ρ = require('peat');
  oreo = require('cookie');
  wrapStream = function(a){
    switch (false) {
    case !σ.isStream(a):
      return a;
    default:
      return σ([].concat(a));
    }
  };
  toMethod = function(fn){
    return function(){
      var args;
      args = slice$.call(arguments);
      return fn.apply(null, slice$.call(args).concat([this]));
    };
  };
  methods = function(it){
    var k, v, results$ = {};
    for (k in it) {
      v = it[k];
      results$[k] = toMethod(v);
    }
    return results$;
  };
  enhance = (function(it){
    return import$(it, methods({
      withHeader: withHeader,
      withStatus: withStatus,
      withCookie: withCookie,
      withSessionCookie: withSessionCookie
    }));
  });
  out$.simple = simple = function(){
    return enhance(wrapStream.apply(this, arguments));
  };
  out$.withStatus = withStatus = curry$(function(code, rest){
    var first;
    first = true;
    return enhance(wrapStream(rest).flatMap(function(x){
      if (first) {
        first = false;
        if (x instanceof ρ.Status) {
          return [ρ.Status(code)];
        } else {
          return [ρ.Status(code), x];
        }
      } else {
        return [x];
      }
    }));
  });
  out$.ok = ok = withStatus(200);
  out$.notFound = notFound = withStatus(404);
  out$.error = error = withStatus(500);
  out$.withHeader = withHeader = curry$(function(name, value, rest){
    return enhance(
    σ([ρ.Header(name, value)]).concat(wrapStream(rest)));
  });
  out$.type = type = withHeader('content-type');
  out$.json = json = function(){
    return ok(type('application/json')(JSON.stringify.apply(this, arguments)));
  };
  out$.html = html = function(){
    return ok(type('text/html').apply(this, arguments));
  };
  out$.text = text = function(){
    return ok(type('text/plain').apply(this, arguments));
  };
  out$.withCookie = withCookie = curry$(function(k, v, opts, rest){
    return withHeader('set-cookie', oreo.serialize(k, v, opts), rest);
  });
  out$.withSessionCookie = withSessionCookie = curry$(function(k, v, rest){
    return withCookie(k, v, null, rest);
  });
  out$.redirect = redirect = curry$(function(code, location, rest){
    return enhance(wrapStream(rest)).withStatus(code).withHeader('Location', location);
  });
  out$.movedPermanently = movedPermanently = redirect(301);
  out$.found = found = redirect(302);
  out$.seeOther = seeOther = redirect(303);
  out$.temporaryRedirect = temporaryRedirect = redirect(307);
  out$.permanentRedirect = permanentRedirect = redirect(308);
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
